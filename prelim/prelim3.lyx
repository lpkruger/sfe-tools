#LyX 1.4.1 created this file. For more info see http://www.lyx.org/
\lyxformat 245
\begin_document
\begin_header
\textclass article
\language english
\inputencoding auto
\fontscheme default
\graphics default
\paperfontsize default
\spacing single
\papersize default
\use_geometry false
\use_amsmath 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes true
\end_header

\begin_body

\begin_layout Title
Prelim 
\newline
Optimization of Secure Function Evaluation
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Quote
"If a computer programmed by people learns the contents of a communication,
 and takes action based on what it learns, it invades privacy." 
\end_layout

\begin_deeper
\begin_layout Quote
Mark Rasch, former head of the US Justice Dept's computer crime unit 
\end_layout

\end_deeper
\begin_layout Subsection
Importance of privacy preserving protocols
\end_layout

\begin_layout Standard
Secure function evaluation is a technique which can address the many privacy
 concerns of the modern age.
 Privacy is becoming an important concern as computers increase in power
 and the internet continues to grow.
 
\begin_inset LatexCommand \cite{cra99,tur03}

\end_inset

 More and more data is stored on machines that are connected to the internet,
 directly or indirectly, and there are many examples in the newspapers today
 of privacy compromising activities such as phishing, data theft, and identity
 theft involving this massive amount of data.
 There are also many other reasons why should be protected, including business
 competition, respect of personal privacy, and government mandate, such
 as HIPPA laws 
\begin_inset LatexCommand \cite{hippa}

\end_inset

 which mandate strict privacy among healthcare professionals along with
 stiff penalties for violation.
\end_layout

\begin_layout Standard
Despite these many concerns, there is also a conflicting desire to perform
 useful computations with data.
 Data is not useful unless it can be accessed and manipulated.
 Sometimes various parties would like to collaborate on research involving
 sensitive data.
 The challenge is how to balance these concerns, making data available for
 legitimate uses while preserving as much privacy as possible.
\end_layout

\begin_layout Subsection
Methods of privacy preservation
\end_layout

\begin_layout Standard
There have been several methods developed so far of preserving personal
 privacy while permitting use of data.
 The most simple method, conceptually, is to replace identifying information,
 such as the name, social security number, and other personally identifying
 data with random unique identifiers, and then using the transformed data
 for computation.
 If it is necessary to correlate the outputs of the computation with individuals
 , the data owner can do this, but other parties presumably can not.
 However, this method has been shown to be vulnerable to attacks that correlate
 the transformed data with information available from external sources to
 reconstruct the obfuscated data, thereby breaking the privacy protection.
 [cite] Another method of preserving privacy is known as secure multiparty
 computation.
 This is a technique of performing computations on inputs supplied by multiple
 parties while provably maintaining privacy guarantees.
 If the computation is a function evaluation, then it is called secure function
 evaluation, or SFE.
 The inputs to the function are partitioned among more than one party, {look
 up definition in Goldreich} and the function is computed collaboratively
 while preserving the privacy of each participants' individual inputs.
 In this case, privacy is considered preserved if no party learns any informatio
n that would affect th eir estimate of the probability distribution of another
 party's inputs, except for that which can be calculated by the parties
 own inputs and the final output of the function evaluation.
 In other words, the entropy gain of each party is equivalent to the entropy
 gain in an idealized protocol where a trusted third party collects all
 the inputs, evaluates the function, and transmits only the output to each
 party.
 Depending on the protocol, the guarentees for some parties may be based
 on typical assumptions of computational hardness, while the guarentees
 for other parties may be or information theoretic.
\end_layout

\begin_layout Standard
Although SFE has provable privacy guarantees, its implementation tends to
 be very expensive in terms of both computational and networking resources,
 and therefore has not been used very much outside of academic literature,
 despite the fact that was introduced 20 years ago in 
\begin_inset LatexCommand \cite{Yao:86}

\end_inset

 There has been research in recent years to make SFE more practical.
 This research falls into two categories: general and function specific.
 General protocols allow any function expressed as a circuit computation
 to be securely evaluatable.
 The Fairplay system 
\begin_inset LatexCommand \cite{Fairplay}

\end_inset

 is a straightforward implementation of the Yao protocol, along with a supportin
g compiler that allow s secure functions to be written in a more familiar
 functional programming notation.
 Kruger et al .
 
\begin_inset LatexCommand \cite{kruger06}

\end_inset

 showed how ordered binary decision diagrams can be used to produce more
 efficient secure circuits.
 Funct ion specific protocol design has produced secure protocols which
 perform dramatically better than general constructions.
 Privacy preserving data mining (PPDM) has been one of the main applications
 driving such research.
 Other protocols have been developed for classes of functions such as polynomial
 evaluation {cite} and string alignment algorithms such as edit distance
 
\begin_inset LatexCommand \cite{kruger07}

\end_inset

.
 
\end_layout

\begin_layout Standard
I am proposing to continue researching ways to improve the efficiency of
 privacy preserving protocols, culminating in an optimizing protocol compiler
 that will greatly simplify the task of constructing efficient privacy preservin
g protocols.
 
\end_layout

\begin_layout Standard
- 
\begin_inset Note Comment
status open

\begin_layout Standard
put a box around it
\end_layout

\begin_layout Standard
kruger07
\end_layout

\begin_layout Standard
track down citations
\end_layout

\end_inset


\end_layout

\begin_layout Standard
---
\end_layout

\begin_layout Standard
.
 
\begin_inset Note Comment
status open

\begin_layout Standard
More specifically, the information 
\begin_inset Quotes eld
\end_inset

leaked
\begin_inset Quotes erd
\end_inset

 by an SFE can be quantified as an entropy measure, this measure will be
 zero if the probability distribution over each part of the computation
 that any party can determine after the computation is equivalent to the
 probability distribution that the party can determine solely from his own
 inputs and the designated outputs.
 (expand on entropy)
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
My research studies ways to improve the efficiency of SFE in order to make
 it more useful in practice
\end_layout

\begin_layout Standard
SFE has been studied theoretically for 20 years, but there is very little
 use in practice.
 to make SFE usable and practical.
\end_layout

\begin_layout Standard
My contribution will be to improve the state of the art in practical security,
 by providing tools and methods for securely evaluating functions of interest
 in efficient ways.
\end_layout

\begin_layout Standard
- technique1, technique2, technique3 (1 paragraph each)
\end_layout

\begin_layout Standard
(picture of Yao circuit, picture of Alice and Bob communicating, etc - get
 pictures out of last talk.
\end_layout

\begin_layout Standard
talk to lammie!
\end_layout

\begin_layout Section
Related work
\end_layout

\begin_layout Subsection
Yao '86
\end_layout

\begin_layout Standard
Yao [x] proved that every computation that can be expressed as a circuit
 can be evaluated securely under standard cryptographic assumptions.
 (fill in).
 
\end_layout

\begin_layout Subsection
Fairplay 
\end_layout

\begin_layout Standard
Fairplay is the first system, designed to be practical, that attempts to
 make SFE using Yao's protocol accessible to the average programmer.
 It consists of a compiler from a standard procedural language called Secure
 Function Description Language, or SFDL, to a circuit description language
 called Secure Hardware Description Langauge, or SHDL.
 Fairplay also includes an implementation of the two party Yao protocol
 which evaluates an SHDL function.
\end_layout

\begin_layout Subsection
Primitives
\end_layout

\begin_layout Subsubsection
homomorphic encryption
\end_layout

\begin_layout Standard
Homomorphic Encryption is a class of public key encryption algorithms that
 satisfies the homomorphism property:
\end_layout

\begin_layout Standard
\begin_inset Formula $E(a+b)=E(a)\oplus E(b)$
\end_inset

 where 
\begin_inset Formula $\oplus$
\end_inset

 is an efficient and publically computable operator.
\end_layout

\begin_layout Standard
For general purpose cryptography, the homomorphism property are considered
 undesirable because it can make cryptanalysis easier.
 However, it has been found that homomorphic encryption can lead to efficient
 secure protocols for evaluating certain functions.
 It has found particular application in secure voting protocols.
\end_layout

\begin_layout Subsubsection
oblivious transfer
\end_layout

\begin_layout Standard
Oblivious Transfer, or 
\begin_inset Quotes eld
\end_inset

OT
\begin_inset Quotes erd
\end_inset

, is a protocol that allows one party to receive a choice of data from another
 party.
 In the two party case, one party is known as the 
\begin_inset Quotes eld
\end_inset

sender
\begin_inset Quotes erd
\end_inset

 and the other party the 
\begin_inset Quotes eld
\end_inset

chooser
\begin_inset Quotes erd
\end_inset

.
 It has the property that the chooser does not learn data that is not chosen,
 and the sender does not know what choice the chooser made.
\end_layout

\begin_layout Subsection
privacy preserving data mining 
\end_layout

\begin_layout Section
My work to date
\end_layout

\begin_layout Subsection
k-means clustering protocol
\end_layout

\begin_layout Standard
This work was an efficient application of privacy preserving design principles
 to a commonly used data mining problem.
\end_layout

\begin_layout Subsection
BDD protool
\end_layout

\begin_layout Section
Proposal
\end_layout

\begin_layout Subsection
privacy preserving toolkit 
\end_layout

\begin_layout Subsection
primitives:
\end_layout

\begin_layout Subsubsection
oblivious transfer 
\end_layout

\begin_layout Subsubsection
Pallier encryption 
\end_layout

\begin_layout Subsection
general protocols: 
\end_layout

\begin_layout Subsubsection
Enhanced SHDL (boolean) - 
\end_layout

\begin_layout Subsubsection
Extended BDDs 
\end_layout

\begin_layout Subsection
application protocols 
\end_layout

\begin_layout Subsubsection
data mining algorithms
\end_layout

\begin_layout Subsubsection
dynamic programming 
\end_layout

\begin_layout Subsection
optimizing protocol compiler
\end_layout

\begin_layout Subsubsection
Enhanced SFDL
\end_layout

\begin_layout Section
timeline / publications:
\end_layout

\begin_layout Subsection
dynamic programming 
\end_layout

\begin_layout Subsection
hierarchial clustering 
\end_layout

\begin_layout Subsection
extended BDDs 
\end_layout

\begin_layout Subsection
protocol compiler 
\end_layout

\begin_layout Section
Conclusion
\end_layout

\begin_layout Title
\begin_inset LatexCommand \bibtex[plain]{somesh}

\end_inset


\end_layout

\begin_layout Part*
Random thoughts
\end_layout

\begin_layout Standard
I will write a paper about secure authentication.
 Secure password authentication, known as SPAKA, is a method for mutual
 authentication uwsing a short secret (such as an easily remembered password),
 with strong security guarentees in the face of adversaries.
 In a typical asymmetric SPAKA protocol, Alice knows a secret 
\begin_inset Formula $P$
\end_inset

, and Bob knows 
\begin_inset Formula $H(P)$
\end_inset

, where 
\begin_inset Formula $H$
\end_inset

 is a one way function, with the following security guarentees:
\end_layout

\begin_layout Enumerate
If the (polynomial computationally bounded) adversary has eavesdropping
 abilities only, then Alice and Bob should be able to successfully authenticate
 and setup a secure communication channel without the adversary learning
 anything about 
\begin_inset Formula $P$
\end_inset

 or being able to interpret the secure channel.
 
\end_layout

\begin_layout Enumerate
If the adversary has complete control over the network then the adversary
 will not be able to successfully impersonate either Alice or Bob to the
 other party, nor learn any information about 
\begin_inset Formula $P$
\end_inset

.
 At most, the adversary can disrupt communication between Alice and Bob.
\end_layout

\begin_layout Enumerate
If the adversary has complete control over the network, and additionally
 has learned 
\begin_inset Formula $H(P)$
\end_inset

, then the adversary will be able to impersonate Bob to Alice.
 However, the adversary will not learn any information from Alice that changes
 the difficulty to the adversary of calculating 
\begin_inset Formula $P$
\end_inset

 from 
\begin_inset Formula $H(P)$
\end_inset

, thus Alice's identity can remain computationally protected against the
 adversary impersonating Alice.
\end_layout

\begin_layout Subsection*
Optimizing
\end_layout

\begin_layout Standard
I will research a secure function compiler with defined 
\begin_inset Quotes eld
\end_inset

leak points
\begin_inset Quotes erd
\end_inset

.
 These are subcomputations of the function, which are not outputs, but where
 an information leak is deemed acceptable if it allows the compiler to produce
 a more efficient protocol to evaluate the function securely.
 My previous research has demonstrated that it is possible to use alternate
 circuit representations, such as OBDDs (ordered binary decision diagrams),
 to improve the efficiency of secure circuits.
 I want to investigate other more exotic representations, such as hybrid
 circuits combining OBDDs, boolean circuits, and alternate constructions
 based on OBDDs, as suggested in the conclusion of [Kruger06].
\end_layout

\begin_layout Subsection*
Homomorphic encryption
\end_layout

\begin_layout Standard
I will investigate possible ways to create a more powerful homomorphic encryptio
n scheme.
 
\end_layout

\begin_layout Standard
I am writing about nothing in particular right now.
 I think secure function evaluation is an interesting topic, but right now
 I don't have anything coming to mind.
 Probably because I am anxietous.
 My hope is that by meta-writing about writing anxiety, it will help to
 focus my mind and relieve a bit of stress.
 Perhaps it is better than web-surfing anyway, because I have an strong
 urge to distract my brain by doing something else, even if the alternate
 activity is not rewarding to me.
 Web surfing can be like crack, a quick 
\begin_inset Quotes eld
\end_inset

information high
\begin_inset Quotes erd
\end_inset

.
 An article I once read described it as a 
\begin_inset Quotes eld
\end_inset

dopamine squirt
\begin_inset Quotes erd
\end_inset

.
 I merely need to remember that writing something, anything, is better than
 writing nothing, because it keeps my brain's writing circuits engaged.
 Eventually, I will 
\begin_inset Quotes eld
\end_inset

cross over
\begin_inset Quotes erd
\end_inset

 into writing useful things that will become part of my prelim.
 It is a long term goal, and it will be accomplished one step at a time.
\end_layout

\end_body
\end_document
